from __future__ import annotations
from us.lsi.geometria.Vector2D import Vector2D
from us.lsi.geometria.Objeto2D import Objeto2D
from matplotlib.patches import Patch 
from us.lsi.geometria.Cuadrante import Cuadrante

  
class Punto2D(Objeto2D):
    x: float
    y: float
    
    @staticmethod
    def origen() -> Punto2D: ...   
    @staticmethod
    def of(x:float,y:float) -> Punto2D: ...
    @staticmethod
    def parse(linea:str) -> Punto2D: ...
    def copy(self) ->  Punto2D: ...
    @property
    def vector(self: Punto2D) ->  Vector2D:...
    @property
    def cuadrante(self)->Cuadrante:...
    def distancia_a(self,p:Punto2D) -> float: ...
    @property
    def distancia_al_origen(self: Punto2D) -> float: ...
    def __add__(self,v:Vector2D) -> Punto2D: ... 
    def __sub__(self,v:Vector2D) -> Punto2D: ...
    def vector_to(self,p:Punto2D) -> Vector2D: ...
    def traslada(self,v:Vector2D) ->Punto2D: ...
    def rota(self, p:Punto2D, angulo:float) -> Punto2D: ...    
    def homotecia(self,p:Punto2D,factor:float) -> Punto2D: ...
    @property
    def shape(self)->Patch: ...
    def __str__(self) -> str: ...
    def proyecta_sobre_recta(self,r) -> Punto2D: ...   
    def simetrico_con_respecto_a_recta(self,r) -> Punto2D:... 